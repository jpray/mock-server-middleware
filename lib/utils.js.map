{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":";AAAA,mBAAmB;;AAEnB,iCAA0C;AAG1C,4BAA2B;AAC3B,6BAA4B;AAC5B,+CAA8C;AAK9C,YAAY;AAEZ,qBAAqB;AAErB,MAAM,cAAc,GAAG,GAAG,CAAA;AAC1B,MAAM,0BAA0B,GAAG,GAAG,CAAA;AAEtC,YAAY;AAEZ,2BAAkC,EAAE,GAAG,EAAE,MAAM,EAAmB,EAAE,MAAyB;IAC3F,IAAI,UAAU,GAAG,GAAG,CAAA;IAEpB,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IACrC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;QAAC,UAAU,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;IAAC,CAAC;IAC5E,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;QAAC,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAA;IAAC,CAAC;IAC/D,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,gBAAgB,EAAE,MAAM,CAAC,OAAO,CAAC,CAAA;IAEjE,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAC9B,OAAO,CAAC,GAAG,EAAE,EACb,MAAM,CAAC,MAAM,EACb,MAAM,CAAC,WAAW,EAAE,EACpB,UAAU,CACX,CAAA;IAED,MAAM,CAAC,cAAc,CAAA;AACvB,CAAC;AAhBD,8CAgBC;AAED,8BAAqC,IAAwB;IAC3D,MAAM,CAAC,CAAC,GAAoB,EAAE,GAAmB,EAAE,IAAgB;QACjE,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,IAAI,GAAG,CAAA;QACjC,GAAG,CAAC,SAAS,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAA;QACjD,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,IAAI;YAChC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC1B,CAAC,CAAC,CAAA;QACF,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;IAC7C,CAAC,CAAA;AACH,CAAC;AATD,oDASC;AAED,oBAA2B,UAAkB,EAAE,SAAyB,EAAE,MAAc;IACtF,IAAI,CAAC;QACH,IAAI,OAAO,CAAA;QACX,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YAClC,OAAO,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,UAAU,CAAA;YAC1C,EAAE,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBAAC,OAAO,SAAS,CAAC,UAAU,CAAC,CAAA;YAAC,CAAC;YAChE,MAAM,CAAC,GAAG,CAAC,aAAK,CAAC,yBAAyB,CAAC,GAAG,UAAU,CAAC,CAAA;QAC3D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC,CAAA;YAChC,MAAM,CAAC,GAAG,CAAC,aAAK,CAAC,wBAAwB,CAAC,GAAG,UAAU,CAAC,CAAA;QAC1D,CAAC;QACD,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,OAAO,CAAA;QAAC,CAAC;QAC7C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAA;QAAC,CAAC;QACnF,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAA;IACtC,CAAC;IAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,kBAAkB,CAAC,CAAC,CAAC;YAClC,MAAM,CAAC,IAAI,CAAC,cAAM,CAAC,qBAAqB,CAAC,GAAG,UAAU,CAAC,CAAA;YACvD,MAAM,CAAC,oBAAoB,CAAC,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;QAChE,CAAC;QACD,MAAM,CAAC,KAAK,CAAC,WAAG,CAAC,qBAAqB,CAAC,GAAG,UAAU,CAAC,CAAA;QACrD,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;QACf,MAAM,CAAC,oBAAoB,CAAC,EAAE,IAAI,EAAE,0BAA0B,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAA;IAC5E,CAAC;AACH,CAAC;AAvBD,gCAuBC","sourcesContent":["// region - Imports\n\nimport { red, yellow, green } from 'chalk'\nimport { NextHandleFunction } from 'connect'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport * as _ from 'lodash'\nimport * as path from 'path'\nimport * as requireNew from 'require-uncached'\nimport Logger from './logger'\nimport { IMockServerConfig, IJsonApiDefinition } from './msm'\nimport { IOverrideStore } from './server'\n\n// endregion\n\n// region - Constants\n\nconst HTTP_NOT_FOUND = 404\nconst HTTP_INTERNAL_SERVER_ERROR = 500\n\n// endregion\n\nexport function composeModulePath({ url, method }: IncomingMessage, config: IMockServerConfig): string {\n  let modulePath = url\n\n  modulePath = modulePath.split('#')[0]\n  if (config.preserveQuery !== true) { modulePath = modulePath.split('?')[0] }\n  if (config.lowerCase) { modulePath = modulePath.toLowerCase() }\n  modulePath = modulePath.replace(/[^a-zA-Z0-9/]/g, config.nonChar)\n\n  const fullModulePath = path.join(\n    process.cwd(),\n    config.apiDir,\n    method.toLowerCase(),\n    modulePath,\n  )\n\n  return fullModulePath\n}\n\nexport function convertJsonToHandler(json: IJsonApiDefinition): NextHandleFunction {\n  return (req: IncomingMessage, res: ServerResponse, next: () => void) => {\n    res.statusCode = json.code || 200\n    res.setHeader('Content-Type', 'application/json')\n    _.forEach(json.headers, (val, name) => {\n      res.setHeader(name, val)\n    })\n    res.end(JSON.stringify(json.body, null, 2))\n  }\n}\n\nexport function loadModule(modulePath: string, overrides: IOverrideStore, logger: Logger): NextHandleFunction {\n  try {\n    let handler\n    if (overrides[modulePath] != null) {\n      handler = overrides[modulePath].definition\n      if (overrides[modulePath].once) { delete overrides[modulePath] }\n      logger.log(green('Using Manual Override: ') + modulePath)\n    } else {\n      handler = requireNew(modulePath)\n      logger.log(green('Using API definition: ') + modulePath)\n    }\n    if (_.isFunction(handler)) { return handler }\n    if (!_.isNull(handler) && _.isFunction(handler.default)) { return handler.default }\n    return convertJsonToHandler(handler)\n  } catch (e) {\n    if (e.code === 'MODULE_NOT_FOUND') {\n      logger.warn(yellow('StubAPI not found: ') + modulePath)\n      return convertJsonToHandler({ code: HTTP_NOT_FOUND, body: e })\n    }\n    logger.error(red('Errors in StubAPI: ') + modulePath)\n    logger.error(e)\n    return convertJsonToHandler({ code: HTTP_INTERNAL_SERVER_ERROR, body: e })\n  }\n}\n"]}