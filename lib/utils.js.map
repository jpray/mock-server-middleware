{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// region - Imports\n\nimport { yellow, green } from 'chalk'\nimport * as clearRequire from 'clear-require'\nimport { NextHandleFunction } from 'connect'\nimport * as fs from 'fs'\nimport { IncomingMessage, ServerResponse } from 'http'\nimport * as _ from 'lodash'\nimport * as path from 'path'\nimport * as stripJsonComments from 'strip-json-comments'\nimport Logger from './logger'\nimport { IMockServerConfig, IJsonApiDefinition } from './msm'\nimport { IOverrideStore } from './server'\n\n// endregion\n\n// region - Constants\n\nconst HTTP_NOT_FOUND = 404\n\n// endregion\n\nexport function composeModulePath({ url, method }: IncomingMessage, config: IMockServerConfig): string {\n  let modulePath = url\n\n  modulePath = modulePath.split('#')[0]\n  if (config.preserveQuery !== true) { modulePath = modulePath.split('?')[0] }\n  if (config.lowerCase) { modulePath = modulePath.toLowerCase() }\n  modulePath = modulePath.replace(/[^a-zA-Z0-9/]/g, config.nonChar)\n\n  const fullModulePath = path.join(\n    process.cwd(),\n    config.apiDir,\n    method.toLowerCase(),\n    modulePath,\n  )\n\n  return fullModulePath\n}\n\nexport function convertJsonToHandler(json: IJsonApiDefinition): NextHandleFunction {\n  return (req: IncomingMessage, res: ServerResponse, next: () => void) => {\n    res.statusCode = json.code || 200\n    res.setHeader('Content-Type', 'application/json')\n    _.forEach(json.headers, (val, name) => {\n      res.setHeader(name, val)\n    })\n    res.end(JSON.stringify(json.body, null, 2))\n  }\n}\n\n/**\n * @param filePath - path to load file, with \".json\" suffix or not.\n * @param logger\n * @returns\n *     return loaded stuff if successfully loaded;\n *     return `undefined` if failed to load;\n */\nexport function readJsonDefFromFs(filePath: string, logger: Logger): NextHandleFunction {\n  if (!_.isString(filePath)) { throw new TypeError('Path must be a string!') }\n  const formattedPath = path.extname(filePath) === '.json' ? filePath : `${filePath}.json`\n\n  let loadedFile: string\n  try {\n    loadedFile = fs.readFileSync(formattedPath, 'utf8')\n  } catch (e) {\n    logger.warn(`Failed to load file ${formattedPath}`)\n    return\n  }\n\n  try {\n    const parsedFile = JSON.parse(stripJsonComments(loadedFile)) as IJsonApiDefinition\n    return convertJsonToHandler(parsedFile)\n  } catch (e) {\n    logger.warn(`Failed to parse file ${formattedPath}`)\n  }\n}\n\n/**\n * @param filePath - path to load file, with \".js\" suffix or not.\n * @param logger\n * @returns\n *     return loaded stuff if successfully loaded;\n *     return `undefined` if failed to load;\n */\nexport function readJsDefFromFs(filePath: string, logger: Logger): NextHandleFunction {\n  if (!_.isString(filePath)) { throw new TypeError('Path must be a string!') }\n  const formattedPath = path.extname(filePath) !== '.json' ? filePath : `${filePath}.js`\n\n  try {\n    clearRequire(formattedPath)\n    const loadedFile = require(formattedPath)\n    if (_.isFunction(loadedFile)) { return loadedFile }\n    if (!_.isNull(loadedFile) && _.isFunction(loadedFile.default)) { return loadedFile.default }\n    logger.warn(`Failed to recognize commonjs export or es default export from module ${formattedPath}`)\n  } catch (e) {\n    logger.warn(`Failed to require module ${formattedPath}`)\n  }\n}\n\n/**\n * @param modulePath - path to load file, with \".js\" suffix or not.\n * @param logger\n * @returns\n *     return loaded stuff if successfully loaded;\n *     return `undefined` if failed to load;\n */\nexport function loadModuleFromFs(modulePath: string, logger: Logger): any {\n  let handler\n\n  const extname = path.extname(modulePath)\n\n  if (extname === '.json' || extname === '') { handler = readJsonDefFromFs(modulePath, logger) }\n  if (handler != null) { return handler }\n\n  return readJsDefFromFs(modulePath, logger)\n}\n\nexport function loadModuleFromOverrides(modulePath: string, overrides: IOverrideStore, logger: Logger): NextHandleFunction {\n  const loaded = overrides[modulePath]\n  let handler: NextHandleFunction\n\n  if (loaded == null) {\n    return\n  } else if (!_.isFunction(loaded.definition)) {\n    logger.warn(`Overrides for ${modulePath} is corrupted, deleting...`)\n    delete overrides[modulePath]\n    return\n  }\n\n  handler = loaded.definition\n  if (loaded.once) { delete overrides[modulePath] }\n\n  return handler\n}\n\nexport function loadModule(modulePath: string, overrides: IOverrideStore, logger: Logger): NextHandleFunction {\n  let handler: NextHandleFunction\n\n  handler = loadModuleFromOverrides(modulePath, overrides, logger)\n  if (handler != null) {\n    logger.log(green('Using Manual Override: ') + modulePath)\n    return handler\n  }\n\n  handler = loadModuleFromFs(modulePath, logger)\n  if (handler != null) {\n    logger.log(green('Using API definition: ') + modulePath)\n    return handler\n  }\n\n  logger.warn(yellow('StubAPI not found: ') + modulePath)\n  return convertJsonToHandler({ code: HTTP_NOT_FOUND, body: {} })\n}\n"]}